#!/bin/bash

set -o nounset

# Setup:
# - Single source repo for webpipe/latch, for convenience, code sharing, etc.
# - Two different basis packages?  Or one.
#   - A single package can expose two executables: webpipe and latch.
#   - And the webpipe.R library.
# - A single set of documentation?  If it is versioned, that doesn't really
# make that much sense.  But for now we won't bother versioning it.

readonly THIS_DIR=$(readlink -f $(dirname $0))

export PYTHONPATH=$THIS_DIR:~/hg/tnet/python:~/hg/json-template/python

manifest() {
  # TODO: create a versioning scheme.  We are just using this for the build
  # stamp (timestamp, host)
  local version=prerelease
  basisc echo-stamp webpipe $version > _tmp/Package.stamp
  echo _tmp/Package.stamp Package.stamp

  # TODO: Use deps in _tmp
  # TODO: build basis package
  py-deps webpipe.serve webpipe.xrender
  ls webpipe/*.html webpipe.R webpipe.sh
}

Build() {
  manifest | multi tar _tmp/webpipe.tar.gz
}


run-py-tests() {
  local dir=$1
  ls $dir/*_test.py | awk '{ print "./" $0 }' | sh -x -e
}

Test() {
  set -o errexit

  run-py-tests webpipe
  run-py-tests common
  run-py-tests latch

  echo PASS
}

# TODO:
# - usage-address.txt should be set

Deploy() {
  # copy basis package somewhere?
  echo
}

"$@"

